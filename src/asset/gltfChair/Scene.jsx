/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scene.gltf
Author: maxsbond.work (https://sketchfab.com/maxsbond.work)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/arm-chair-furniture-ec62634ebb5a41f491bbb9da04cd9dd1
Title: Arm chair / Furniture
*/

import React from 'react'
import { useGLTF } from '@react-three/drei';
import { useTexture } from '@react-three/drei';
import { useCustomization } from '../../components/context/Customization';
import * as THREE from "three"; 

export function Model(props) {
  const {material} =useCustomization();

  const { nodes } = useGLTF('/scene.gltf')

  const LeatherTextureProps = useTexture({
    map: './leather/Leather_Padded_001_basecolor.jpg',
    normalMap: './leather/Leather_Padded_001_normal.jpg',
    roughnessMap: './leather/Leather_Padded_001_roughness.jpg',
    aoMap: './leather/Leather_Padded_001_ambientOcclusion.jpg',
  })

  LeatherTextureProps.map.repeat.set(2,2);
  LeatherTextureProps.normalMap.repeat.set(2,2);
  LeatherTextureProps.roughnessMap.repeat.set(2,2);
  LeatherTextureProps.aoMap.repeat.set(2,2);

debugger

  LeatherTextureProps.map.wrapS = LeatherTextureProps.map.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.normalMap.wrapS = LeatherTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.roughnessMap.wrapS = LeatherTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.aoMap.wrapS = LeatherTextureProps.aoMap.wrapT = THREE.RepeatWrapping;

  const fabricTextureProps = useTexture({
    map: './fabric/Substance_Graph_BaseColor.jpg',
    // normalMap: './fabric/Substance_Graph_Normal.jpg',
    // roughnessMap: './fabric/Substance_Graph_Roughness.jpg',
    // aoMap: './fabric/Substance_Graph_AmbientOcclusion.jpg',
  })

  fabricTextureProps.map.repeat.set(2,2);
  // fabricTextureProps.normalMap.repeat.set(2,2);
  // fabricTextureProps.roughnessMap.repeat.set(2,2);
  // fabricTextureProps.aoMap.repeat.set(2,2);

  fabricTextureProps.map.wrapS = fabricTextureProps.map.wrapT = THREE.RepeatWrapping;
  // fabricTextureProps.normalMap.wrapS = fabricTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  // fabricTextureProps.roughnessMap.wrapS = fabricTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  // fabricTextureProps.aoMap.wrapS = fabricTextureProps.aoMap.wrapT = THREE.RepeatWrapping;

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_6.geometry}  position={[0, 40.99, 0]} scale={43.31} >
          <meshStandardMaterial {...(material === "Leather" ? LeatherTextureProps: fabricTextureProps  )  } />
          {/* <meshStandardMaterial {...LeatherTextureProps} color={chairColor.color} /> */}
          {/* material={materials.Base} */}
            </mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
