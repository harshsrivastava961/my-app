/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useTexture } from '@react-three/drei';
import { useCustomization } from '../../components/context/Customization';
import * as THREE from "three"; 

export default function Model({ ...props }) {
  const {material, chairColor} =useCustomization();

  const LeatherTextureProps = useTexture({
    map: './leather/Leather_Padded_001_basecolor.jpg',
    normalMap: './leather/Leather_Padded_001_normal.jpg',
    roughnessMap: './leather/Leather_Padded_001_roughness.jpg',
    aoMap: './leather/Leather_Padded_001_ambientOcclusion.jpg',
  })

  LeatherTextureProps.map.repeat.set(2,2);
  LeatherTextureProps.normalMap.repeat.set(2,2);
  LeatherTextureProps.roughnessMap.repeat.set(2,2);
  LeatherTextureProps.aoMap.repeat.set(2,2);

  LeatherTextureProps.map.wrapS = LeatherTextureProps.map.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.normalMap.wrapS = LeatherTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.roughnessMap.wrapS = LeatherTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  LeatherTextureProps.aoMap.wrapS = LeatherTextureProps.aoMap.wrapT = THREE.RepeatWrapping;

  const fabricTextureProps = useTexture({
    map: './fabric/Substance_Graph_BaseColor.jpg',
    normalMap: './fabric/Substance_Graph_Normal.jpg',
    roughnessMap: './fabric/Substance_Graph_Roughness.jpg',
    aoMap: './fabric/Substance_Graph_AmbientOcclusion.jpg',
  })

  fabricTextureProps.map.repeat.set(2,2);
  fabricTextureProps.normalMap.repeat.set(2,2);
  fabricTextureProps.roughnessMap.repeat.set(2,2);
  fabricTextureProps.aoMap.repeat.set(2,2);

  fabricTextureProps.map.wrapS = fabricTextureProps.map.wrapT = THREE.RepeatWrapping;
  fabricTextureProps.normalMap.wrapS = fabricTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  fabricTextureProps.roughnessMap.wrapS = fabricTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  fabricTextureProps.aoMap.wrapS = fabricTextureProps.aoMap.wrapT = THREE.RepeatWrapping;


  const group = useRef()
  const { nodes, materials } = useGLTF('/shoe.gltf')
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.shoe.geometry} material={materials.laces} />
      {/* <mesh geometry={nodes.shoe_1.geometry} material={materials.mesh} /> */}
      <mesh geometry={nodes.shoe_1.geometry}>
      <meshStandardMaterial {...(material === "Fabric" ?  fabricTextureProps : LeatherTextureProps)  } color={chairColor.color} />
      </mesh>

      <mesh geometry={nodes.shoe_2.geometry} material={materials.caps} />
      <mesh geometry={nodes.shoe_3.geometry} material={materials.inner} />
      <mesh geometry={nodes.shoe_4.geometry} material={materials.sole} />
      {/* <mesh geometry={nodes.shoe_4.geometry}>

      <meshStandardMaterial {...(material === "Fabric" ?  fabricTextureProps : LeatherTextureProps)  } color={chairColor.color} />

      </mesh> */}
      <mesh geometry={nodes.shoe_5.geometry} material={materials.stripes} />
      <mesh geometry={nodes.shoe_6.geometry} material={materials.band} />
      <mesh geometry={nodes.shoe_7.geometry} material={materials.patch} />
    </group>
  )
}

useGLTF.preload('/shoe.gltf')
